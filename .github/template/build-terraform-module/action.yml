name: build-terraform-module
description: Build Terraform module

inputs:
  terraformToken:
    required: true
    description: "Terraform token"
  terraformPath:
    required: true
    description: "Path to the terraform files"
    default: "infra/terraform"
  terraformModulePath:
    required: true
    description: "Path to the terraform files"
    default: "module/keyvault"

runs:
  using: "composite"
  steps:
    - uses: "./.github/template/prepare-gitversion"
      id: moduleVersion

    - name: Prepare Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.7

    - name: Determine module
      id: module
      run: |
        $name="${{ inputs.terraformModulePath }}".Replace('/','-')
        echo "TERRAFORM_MODULE=$name" >> $env:GITHUB_ENV
        echo "TERRAFORM_PROVIDER=azurerm" >> $env:GITHUB_ENV
      shell: pwsh

    - name: "Terraform: Validate ${{ env.TERRAFORM_MODULE }}"
      run: |
        $env:TF_LOG='TRACE'

        terraform version
        if($LastExitCode){throw}
        terraform -chdir=${{ inputs.terraformPath }}/${{ inputs.terraformModulePath }}/ init -input=false -backend=false
        if($LastExitCode){throw}
        terraform validate
        if($LastExitCode){throw}

        Remove-Item -Path ${{ inputs.terraformPath }}/${{ inputs.terraformModulePath }}/.terraform** -Force -Recurse
        pushd ${{ inputs.terraformPath }}/${{ inputs.terraformModulePath }};zip ${{ env.TERRAFORM_MODULE }}_${{ env.TERRAFORM_PROVIDER }}_${{ env.MONOREPO_VERSION }}.zip -r **;popd
      shell: pwsh
      env:
        TF_TOKEN_trijssenaar_terraform_io: ${{ inputs.terraformToken }}

    - name: "Artifact: Store ${{ env.TERRAFORM_MODULE }}"
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.TERRAFORM_MODULE }}_${{ env.TERRAFORM_PROVIDER }}_${{ env.MONOREPO_VERSION }}
        path: ${{ inputs.terraformPath }}/${{ inputs.terraformModulePath }}/${{ env.TERRAFORM_MODULE }}_${{ env.TERRAFORM_PROVIDER }}_${{ env.MONOREPO_VERSION }}.zip
