name: deploy
description: "Deploys an application to an environment"

inputs:
  environment:
    required: true
    description: "Name of the environment to deploy to"
  key:
    required: true
    description: "Key to use for the Terraform state storage account"

runs:
  using: "composite"
  steps:
    - uses: ./.github/template/prepare-environment-variables
      with:
        environment: ${{ inputs.environment }}

    - uses: ./.github/template/prepare-azure

    - uses: ./.github/template/prepare-tfstate
      id: prepare-tfstate

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.6

    - name: Terraform Build
      run: |
        terraform version
        terraform -chdir=infra/terraform/deploy/demo/ init -input=false -backend=false
        terraform validate
      shell: pwsh

    - name: Create Terraform Plan
      run: |
        $resourceGroupName="${{ steps.prepare-tfstate.outputs.resourceGroupName }}"
        $storageAccountName="${{ steps.prepare-tfstate.outputs.storageAccountName }}"
        $containerName="${{ steps.prepare-tfstate.outputs.containerName }}"

        $env:ARM_ACCESS_KEY=$(az storage account keys list --resource-group ${resourceGroupName} --account-name $storageAccountName --query '[0].value' -o tsv)
        terraform -chdir=infra/terraform/deploy/demo/ init -input=false -backend-config="resource_group_name=${resourceGroupName}" -backend-config="storage_account_name=${storageAccountName}" -backend-config="container_name=${containerName}" -backend-config="key=$env:RESOURCE_GROUP_NAME"
        terraform plan -h
        terraform plan -tfvars=".github/environments/${{ inputs.environment }}.tfvars" -out="tfplan"
      shell: pwsh

    - name: Store Terraform Plan as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.prepare-tfstate.outputs.resourceGroupName }}
        path: tfplan
