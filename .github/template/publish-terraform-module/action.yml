name: publish-terraform-module
description: Deploy Terraform module to Terraform Registry

inputs:
  terraformUsername:
    required: true
    description: "Username for Terraform Registry"
  terraformToken:
    required: true
    description: "Token for Terraform Registry"

runs:
  using: "composite"
  steps:
    - name: Determine module
      id: module
      run: |
        $name="${{ inputs.terraformModulePath }}".Replace('/','-')
        echo "TERRAFORM_MODULE=$name" >> $env:GITHUB_ENV
        echo "TERRAFORM_PROVIDER=azurerm" >> $env:GITHUB_ENV
      shell: pwsh

    - name: "Artifact: Retrieve"
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: "Deploy: Publish ${{ steps.moduleName.outputs.moduleName }}"
      run: |
        $zipFiles=Get-ChildItem -Path artifacts -Recurse -Filter *.zip
        $zipFiles | ForEach-Object{
          $moduleElements=$_.BaseName.Split('_') 
          $moduleName=$moduleElements[0]
          $moduleProvider=$moduleElements[1]
          $moduleVersion=$moduleElements[2]
          Write-Host "Publishing $moduleName $moduleProvider $moduleVersion..."

          $encodedCreds = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes('${{ inputs.terraformUsername }}:${{ inputs.terraformToken }}'))
          $Headers = @{
              Authorization = "Basic $encodedCreds"
          }

          Invoke-WebRequest `
            -Headers $Headers `
            -Method Put `
            -Uri "https://trijssenaar.jfrog.io/artifactory/infrastructure-terraform-local/monorepo/$($moduleName.Replace('module-',''))/$moduleProvider/$moduleVersion.zip" `
            -InFile $_.FullName `
            -ContentType "application/zip"
        }
      shell: pwsh
