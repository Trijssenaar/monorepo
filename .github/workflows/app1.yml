name: Build app1

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/app1.yml
      - src/app1/**
  pull_request:
    branches: ["main"]
    paths:
      - .github/workflows/app1.yml
      - src/app1/**

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.14

      - name: Build app1 image
        id: build
        run: |
          $ErrorActionPreference = "Stop"

          $application="app1"
          $fullSemVer="${{ steps.gitversion.outputs.FullSemVer }}".Replace('+','.')
          echo "APPLICATION_NAME=${application}"
          echo "APPLICATION_NAME=${application}" >> $env:GITHUB_OUTPUT
          echo "APPLICATION_VERSION=${fullSemVer}"
          echo "APPLICATION_VERSION=${fullSemVer}" >> $env:GITHUB_OUTPUT

          $index = Get-Content ./src/${application}/app/index.html
          $index = $index -replace '(<!--Version-->)(.*)(<!--\/Version-->)', "<!--Version-->${fullSemVer}<!--/Version-->"
          $index | Set-Content ./src/${application}/app/index.html

          docker build --tag ${application}:latest --tag ${application}:${fullSemVer} --tag ${application}:${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }}.${{ steps.gitversion.outputs.Patch }} --tag ${application}:${{ steps.gitversion.outputs.Major }}.${{ steps.gitversion.outputs.Minor }} --tag ${application}:${{ steps.gitversion.outputs.Major }} ./src/${application}
          Start-Sleep 10 
          docker save --output ./${application}.tar ${application}:${fullSemVer}
        shell: pwsh

      - uses: actions/upload-artifact@v3
        name: Store GitHub Workflow artifact
        with:
          name: ${{ steps.build.outputs.APPLICATION_NAME }}
          path: ${{ steps.build.outputs.APPLICATION_NAME }}.tar

    outputs:
      fullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}
      informationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build
    environment: app1 Publish
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app1

      - name: Install JFrog
        uses: jfrog/setup-jfrog-cli@v3
        with:
          version: 2.24.2
        env:
          JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
      - name: Store JFrog artifact
        run: |
          $ErrorActionPreference = "Stop"

          $env:JFROG_CLI_BUILD_NAME='app1'
          $env:JFROG_CLI_BUILD_NUMBER='${{needs.build.outputs.FullSemVer}}'

          jf --version
          jf rt ping
          jf rt upload app1.tar applications/
          jf rt build-publish
        shell: pwsh
