name: Build app1

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/app1.yml
      - src/app1/**
  pull_request:
    branches: ["main"]
    paths:
      - .github/workflows/app1.yml
      - src/app1/**

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15

      - name: Login to Artifactory
        uses: docker/login-action@v2
        with:
          registry: trijssenaar.jfrog.io
          username: strijssenaar@xpirit.com
          password: ${{ secrets.DOCKER_APIKEY }}

      - name: Build app1 image
        id: build
        run: |
          $ErrorActionPreference = "Stop"

          $application="app1"
          $index = Get-Content ./src/${application}/app/index.html
          $index = $index -replace '(<!--Version-->)(.*)(<!--\/Version-->)', "<!--Version-->${{ steps.gitversion.outputs.FullSemVer }}<!--/Version-->"
          $index | Set-Content ./src/${application}/app/index.html

          $hostName='trijssenaar.jfrog.io'
          $folderName='applications-docker-local'
          $imageName="${application}:${{ steps.gitversion.outputs.MajorMinorPatch }}"
          $fullTag=Join-Path -Path $hostName -ChildPath $folderName | Join-Path -ChildPath $imageName

          docker build `
            --tag ${application}:latest `
            --tag $fullTag `
            ./src/${application}
          docker push $fullTag
        shell: pwsh

    outputs:
      MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}
      fullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}
      informationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app1

      - name: Install JFrog
        uses: jfrog/setup-jfrog-cli@v3
        with:
          version: 2.24.2
        env:
          JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
      - name: Store JFrog artifact
        run: |
          $ErrorActionPreference = "Stop"

          $env:JFROG_CLI_BUILD_NAME='app1'
          $env:JFROG_CLI_BUILD_NUMBER='${{needs.build.outputs.FullSemVer}}'

          jf --version
          jf rt upload app1.tar applications/app1-$($env:JFROG_CLI_BUILD_NUMBER).tar
          jf rt build-publish
        shell: pwsh
