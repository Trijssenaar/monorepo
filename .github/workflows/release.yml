name: release

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/release.yml
  pull_request:
    branches: ["main"]
    paths:
      - .github/workflows/release.yml

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2

      - name: Setup Docker
        uses: docker/login-action@v3
        with:
          registry: trijssenaar.jfrog.io
          username: strijssenaar@xpirit.com
          password: ${{ secrets.DOCKER_APIKEY }}

      - name: Pull images
        id: build
        run: |
          $ErrorActionPreference = "Stop"

          $artifactsFilePath = "./.github/workflows/artifacts.json"
          $artifacts = Get-Content -Path $artifactsFilePath | ConvertFrom-Json -AsHashtable
          # $artifacts.$Artifact = $Version
          # $artifacts | ConvertTo-Json | Set-Content -Path $artifactsFilePath

          foreach($artifact in $artifacts.GetEnumerator()){
            docker pull trijssenaar.jfrog.io/applications-docker-local/$($artifact.Name):$($artifact.Value)
          }
          docker image ls
        shell: pwsh

      # - name: Install JFrog
      #   uses: jfrog/setup-jfrog-cli@v3
      #   with:
      #     version: 2.24.2
      #   env:
      #     JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
      # - name: Retrieve JFrog artifacts
      #   run: |
      #     $ErrorActionPreference = "Stop"

      #     $env:JFROG_CLI_BUILD_NAME='release'
      #     $env:JFROG_CLI_BUILD_NUMBER='${{ steps.gitversion.outputs.FullSemVer }}'

      #     jf --version
      #     jf rt ping
      #     jf rt download --build=app1/0.1.0+65 applications/* applications/
      #     jf rt download --build=app2/0.1.0+66 applications/* applications/
      #     jf rt build-publish
      #   shell: pwsh

      # - name: Display structure of downloaded files
      #   run: ls -R
