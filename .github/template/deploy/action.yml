name: deploy
description: "Deploys an application to an environment"

inputs:
  environment:
    required: true
    description: "Name of the environment to deploy to"

runs:
  using: "composite"
  steps:
    - name: Prepare Environment Variables
      uses: ./.github/template/prepare-environment-variables
      with:
        environment: ${{ inputs.environment }}

    - name: Prepare Azure
      uses: ./.github/template/prepare-azure

    - name: Prepare Terraform State
      uses: ./.github/template/prepare-tfstate
      id: prepare-tfstate

    - name: Prepare Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.6

    - name: Terraform Build
      run: |
        # Terraform Build
        terraform version
        terraform -chdir=infra/terraform/deploy/demo/ init -input=false -backend=false
        terraform validate
      shell: pwsh

    - name: Terraform Init
      id: init
      run: terraform init -input=false -backend-config="resource_group_name=${{ steps.prepare-tfstate.outputs.resourceGroupName }}" -backend-config="storage_account_name=${{ steps.prepare-tfstate.outputs.storageAccountName }}" -backend-config="container_name=${{ steps.prepare-tfstate.outputs.containerName }}" -backend-config="key=${{ inputs.environment }}.tfstate"
      env:
        ARM_CLIENT_ID: ${{ env.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ env.AZURE_TENANT_ID }}
        ARM_USE_OIDC: "true"
      shell: bash

    - name: Create Terraform Plan
      run: |
        # Create Terraform Plan
        $ErrorActionPreference = "Stop"
        $resourceGroupName="${{ steps.prepare-tfstate.outputs.resourceGroupName }}"
        $storageAccountName="${{ steps.prepare-tfstate.outputs.storageAccountName }}"
        $containerName="${{ steps.prepare-tfstate.outputs.containerName }}"

        # $env:ARM_ACCESS_KEY=$(az storage account keys list --resource-group ${resourceGroupName} --account-name ${storageAccountName} --query '[0].value' -o tsv)
        $env:ARM_USE_OIDC=true
        $env:ARM_TENANT_ID=$env:AZURE_TENANT_ID
        $env:ARM_CLIENT_ID=$env:AZURE_CLIENT_ID
        $env:ARM_SUBSCRIPTION_ID=$env:AZURE_SUBSCRIPTION_ID
        # terraform -chdir=infra/terraform/deploy/demo/ init -input=false -backend-config="resource_group_name=${resourceGroupName}" -backend-config="storage_account_name=${storageAccountName}" -backend-config="container_name=${containerName}" -backend-config="key=${{ inputs.environment }}.tfstate"
        terraform -chdir=infra/terraform/deploy/demo/ plan -var-file="$PWD/.github/environments/${{ inputs.environment }}.tfvars" -out="tfplan" -input=false
      shell: pwsh

    - name: Store Terraform Plan as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.prepare-tfstate.outputs.resourceGroupName }}
        path: tfplan
