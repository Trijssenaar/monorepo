name: Build app1

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/app1.yml
      - .github/template/**
      - src/app1/**
  pull_request:
    branches: ["main"]
    paths:
      - .github/workflows/app1.yml
      - src/app1/**

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build prepare
        uses: "./.github/template/build-prepare"
        with:
          jfrog-secret-env-1: ${{ secrets.JF_SECRET_ENV_1 }}
          docker-apikey: ${{ secrets.DOCKER_APIKEY }}

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15

      - name: Setup Docker
        uses: docker/login-action@v2
        with:
          registry: trijssenaar.jfrog.io
          username: strijssenaar@xpirit.com
          password: ${{ secrets.DOCKER_APIKEY }}

      - name: Build image app1-${{ steps.gitversion.outputs.EscapedBranchName }}
        uses: "./.github/template/build-docker"
        with:
          application-name: app1
          image-name: app1-${{ steps.gitversion.outputs.EscapedBranchName }}
          version: ${{ steps.gitversion.outputs.MajorMinorPatch }}.${{ steps.gitversion.outputs.CommitsSinceVersionSource }}

      # - name: Build image app1-${{ steps.gitversion.outputs.EscapedBranchName }} version ${{ steps.gitversion.outputs.MajorMinorPatch }}.${{ steps.gitversion.outputs.CommitsSinceVersionSource }}
      #   id: build
      #   run: |
      #     $ErrorActionPreference = "Stop"

      #     $application="app1"
      #     $index = Get-Content ./src/${application}/app/index.html
      #     $index = $index -replace '(<!--Version-->)(.*)(<!--\/Version-->)', "<!--Version-->${{ steps.gitversion.outputs.FullSemVer }}<!--/Version-->"
      #     $index | Set-Content ./src/${application}/app/index.html

      #     $hostName='trijssenaar.jfrog.io'
      #     $folderName='applications-docker-local'
      #     $imageName="${application}-${{ steps.gitversion.outputs.EscapedBranchName }}".ToLower()
      #     $majorMinorPatchCommits=""
      #     $fullTag=

      #     jf docker build `
      #       --tag $(Join-Path -Path $hostName -ChildPath $folderName | Join-Path -ChildPath "${imageName}:${{ steps.gitversion.outputs.MajorMinorPatch }}.${{ steps.gitversion.outputs.CommitsSinceVersionSource }}") `
      #       ./src/${application}
      #     jf docker push $(Join-Path -Path $hostName -ChildPath $folderName | Join-Path -ChildPath "${imageName}:${{ steps.gitversion.outputs.MajorMinorPatch }}.${{ steps.gitversion.outputs.CommitsSinceVersionSource }}")

      #     # $env:JFROG_CLI_BUILD_NAME=${imageName}
      #     # $env:JFROG_CLI_BUILD_NUMBER=${{ steps.gitversion.outputs.MajorMinorPatch }}.${{ steps.gitversion.outputs.CommitsSinceVersionSource }}
      #     jf rt build-publish
      #   shell: pwsh

    outputs:
      MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}
      fullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}
      informationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}
